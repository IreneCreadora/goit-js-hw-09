{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAuB/B,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,MAAK,CACvEc,QAAO,IACTC,MAAO,QACPC,cAAc,EACdjB,SAAU,c,CAId,SAASkB,EAASR,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAArB,GAASsB,OAAOO,QAAQ,sBAAqCL,OAAfd,EAAS,QAAYc,OAANb,EAAM,MAAK,CACtEc,QAAS,IACTC,MAAO,QACPC,cAAc,EACdjB,SAAU,c,CAhDdR,EAAKM,KAAKsB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBASJ,SAAqBZ,GAEnB,I,IAFqBT,EAAFS,EAAET,MAAOsB,EAATb,EAASa,KAAMC,EAAfd,EAAec,OAC9BC,EAAkBxB,EACbyB,EAAQ,EAAGA,GAASF,EAAQE,GAAS,EAC5C3B,EAAc2B,EAAOD,GAAiBE,KAAKlB,GAAWmB,MAAMV,GAC5DO,GAAmBF,C,CAPrBM,CALa,CACX5B,MAAO6B,SAAStC,EAAKC,WAAWsC,OAChCR,KAAMO,SAAStC,EAAKI,UAAUmC,OAC9BP,OAAQM,SAAStC,EAAKK,YAAYkC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const data = {\n    delay: parseInt(refs.inputDelay.value),\n    step: parseInt(refs.inputStep.value),\n    amount: parseInt(refs.inputAmount.value),\n  };\n  makePromise(data);\n}\n\nfunction makePromise({ delay, step, amount }) {\n  let calculatedDelay = delay;\n  for (let index = 1; index <= amount; index += 1) {\n    createPromise(index, calculatedDelay).then(onFulfill).catch(onReject);\n    calculatedDelay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfill({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 6000,\n    width: '300px',\n    clickToClose: true,\n    position: 'center-top',\n  });\n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 6000,\n    width: '300px',\n    clickToClose: true,\n    position: 'center-top',\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onFulfill","param","$parcel$interopDefault","Notify","success","concat","timeout","width","clickToClose","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","e","preventDefault","step","amount","calculatedDelay","index","then","catch","$ce04d3a99e08e73b$var$makePromise","parseInt","value"],"version":3,"file":"03-promises.eb88c3f9.js.map"}